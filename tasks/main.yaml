#deploy required fio benchmark scripts and service files on the target host
- name: Deploy fio benchmark script file
  template:
    src: run_fio_benchmark_sh.j2
    dest: "{{ fio_script_file }}"
    mode: "0744"
    force: on
  register: template_script_result

- name: Execute the fio benchmark
  command: "{{ fio_script_file }}"
  async: 36000
  poll: 30
  tags:
    - molecule-idempotence-notest

#print average write/read throughput and average write/read IOPs to stdout
- name: Get the Write IOPS
  shell: |
    set -o pipefail
    cat /tmp/fio_benchmark_write_iops_round_* | sed -n -r -e '/^[[:space:]]+iops/ s/[[:space:]]|iops|://gp'
  register: shell_fio_write_iops
  changed_when: False

- name: Get the Read IOPS
  shell:
    set -o pipefail
    cat /tmp/fio_benchmark_read_iops_round_* | sed -n -r -e '/^[[:space:]]+iops/ s/[[:space:]]|iops|://gp'
  register: shell_fio_read_iops
  changed_when: False

- name: Get the Write Throughput
  shell:
    set -o pipefail
    cat /tmp/fio_benchmark_write_throughput_round_* | sed -n -r '/READ|WRITE/ p'|awk -F ',' '{print $2}'
  register: shell_fio_write_throughput
  changed_when: False

- name: Get the Read Throughput
  shell:
    set -o pipefail
    cat /tmp/fio_benchmark_read_throughput_round_* | sed -n -r '/READ|WRITE/ p'|awk -F ',' '{print $2}'
  register: shell_fio_read_throughput
  changed_when: False

- name: Results - Write IOPS of the disk
  debug:
    msg: "{{ shell_fio_write_iops.stdout_lines }}"

- name: Results - Read IOPS of the disk
  debug:
    msg: "{{ shell_fio_read_iops.stdout_lines }}"

- name: Results - Write Throughput of the disk
  debug:
    msg: "{{ shell_fio_write_throughput.stdout_lines }}"

- name: Results - Read Throughput of the disk
  debug:
    msg: "{{ shell_fio_read_throughput.stdout_lines }}"

- name: Show local direcotry we will be fetching to
  ansible.builtin.debug:
    var: fio_store_local_logs_dir
  run_once: yes
  when: "fio_store_local_logs_dir|length != 0"

- name: Cleanup local direcotry we will be fetching to
  ansible.builtin.file:
    path: "{{ fio_store_local_logs_dir }}"
    state: absent
  delegate_to: localhost
  run_once: yes
  when: "fio_store_local_logs_dir|length != 0"

- name: Find logs we are going to fetch
  ansible.builtin.find:
    paths: /tmp
    depth: 1
    file_type: file
    use_regex: no
    patterns:
      - fio_benchmark_write_iops_round_*
      - fio_benchmark_read_iops_round_*
      - fio_benchmark_write_throughput_round_*
      - fio_benchmark_read_throughput_round_*
  when: "fio_store_local_logs_dir|length != 0"
  register: find_logs

- name: Fetch fio logs
  ansible.builtin.fetch:
    src: "{{ item.path }}"
    dest: "{{ fio_store_local_logs_dir }}/{{ inventory_hostname }}/"
    flat: yes
  when: "fio_store_local_logs_dir|length != 0"
  loop: "{{ find_logs.files }}"
